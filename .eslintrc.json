{
  "env": {
    "browser": true,
    "es6": true,
    "es2022": true,
    "jest": true,
    "node": true
  },
  "extends": [
    "airbnb",
    "airbnb/hooks",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:jest/recommended",
    "plugin:import/recommended",
    "prettier",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./packages/**/tsconfig.json"
  },
  "plugins": [
    "import",
    "@typescript-eslint",
    "eslint-plugin-prettier",
    "jest",
    "react"
  ],
  "rules": {
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "format": [
          "UPPER_CASE"
        ],
        "modifiers": [
          "const",
          "global"
        ],
        "types": [
          "string",
          "number",
          "boolean",
          "array"
        ],
        "selector": [
          "variable"
        ]
      },
      {
        "format": [
          "PascalCase",
          "camelCase"
        ],
        "modifiers": [
          "const",
          "global"
        ],
        "types": [
          "function"
        ],
        "selector": [
          "variable"
        ]
      },
      {
        "selector": [
          "typeLike",
          "interface"
        ],
        "format": [
          "PascalCase"
        ]
      }
    ],
    "@typescript-eslint/no-shadow": [
      "error"
    ],
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "arrow-parens": [
      "error",
      "as-needed"
    ],
    "comma-dangle": "off",
    "func-style": [
      "error",
      "declaration",
      {
        "allowArrowFunctions": true
      }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "import/named": "off",
    "import/no-extraneous-dependencies": "off",
    "import/no-unresolved": "error",
    "import/order": [
      "error",
      {
        "alphabetize": {
          "caseInsensitive": true,
          "order": "asc"
        },
        "groups": [
          [
            "builtin",
            "external"
          ]
        ],
        "newlines-between": "always",
        "pathGroups": [
          {
            "group": "external",
            "pattern": "@viridis/**",
            "position": "after"
          },
          {
            "group": "external",
            "pattern": "+(root|src)/**",
            "position": "after"
          }
        ],
        "pathGroupsExcludedImportTypes": [
          "builtin"
        ]
      }
    ],
    "import/prefer-default-export": "off",
    "jsx-quotes": [
      "error",
      "prefer-double"
    ],
    "newline-after-var": "error",
    "newline-before-return": "error",
    "no-console": "warn",
    "no-shadow": "off",
    "no-unused-expressions": "off",
    "no-unused-vars": "off",
    "object-curly-newline": "off",
    "object-property-newline": "error",
    "prefer-arrow-callback": "off",
    "prettier/prettier": [
      "error",
      {
        "arrowParens": "avoid",
        "endOfLine": "auto",
        "printWidth": 80,
        "singleQuote": true,
        "tabWidth": 2,
        "trailingComma": "all",
        "useTabs": false
      }
    ],
    "quotes": [
      2,
      "single"
    ],
    "react/function-component-definition": [
      2,
      {
        "namedComponents": "arrow-function"
      }
    ],
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".tsx",
          ".ts"
        ]
      }
    ],
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-props-no-spreading": "off",
    "react/prop-types": "off",
    "react/require-default-props": "off"
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx"
      ]
    },
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ],
        "paths": [
          "."
        ]
      },
      "typescript": {
        "project": [
          "packages/client/tsconfig.json",
          "packages/server/tsconfig.json",
          "packages/shared/tsconfig.json"
        ]
      }
    }
  }
}
